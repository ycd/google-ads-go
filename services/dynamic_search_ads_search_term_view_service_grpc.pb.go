// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package services

import (
	context "context"
	resources "github.com/ercling/google-ads-go/resources"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DynamicSearchAdsSearchTermViewServiceClient is the client API for DynamicSearchAdsSearchTermViewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DynamicSearchAdsSearchTermViewServiceClient interface {
	// Returns the requested dynamic search ads search term view in full detail.
	//
	// List of thrown errors:
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [QuotaError]()
	//   [RequestError]()
	GetDynamicSearchAdsSearchTermView(ctx context.Context, in *GetDynamicSearchAdsSearchTermViewRequest, opts ...grpc.CallOption) (*resources.DynamicSearchAdsSearchTermView, error)
}

type dynamicSearchAdsSearchTermViewServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDynamicSearchAdsSearchTermViewServiceClient(cc grpc.ClientConnInterface) DynamicSearchAdsSearchTermViewServiceClient {
	return &dynamicSearchAdsSearchTermViewServiceClient{cc}
}

func (c *dynamicSearchAdsSearchTermViewServiceClient) GetDynamicSearchAdsSearchTermView(ctx context.Context, in *GetDynamicSearchAdsSearchTermViewRequest, opts ...grpc.CallOption) (*resources.DynamicSearchAdsSearchTermView, error) {
	out := new(resources.DynamicSearchAdsSearchTermView)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v7.services.DynamicSearchAdsSearchTermViewService/GetDynamicSearchAdsSearchTermView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DynamicSearchAdsSearchTermViewServiceServer is the server API for DynamicSearchAdsSearchTermViewService service.
// All implementations must embed UnimplementedDynamicSearchAdsSearchTermViewServiceServer
// for forward compatibility
type DynamicSearchAdsSearchTermViewServiceServer interface {
	// Returns the requested dynamic search ads search term view in full detail.
	//
	// List of thrown errors:
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [QuotaError]()
	//   [RequestError]()
	GetDynamicSearchAdsSearchTermView(context.Context, *GetDynamicSearchAdsSearchTermViewRequest) (*resources.DynamicSearchAdsSearchTermView, error)
	mustEmbedUnimplementedDynamicSearchAdsSearchTermViewServiceServer()
}

// UnimplementedDynamicSearchAdsSearchTermViewServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDynamicSearchAdsSearchTermViewServiceServer struct {
}

func (UnimplementedDynamicSearchAdsSearchTermViewServiceServer) GetDynamicSearchAdsSearchTermView(context.Context, *GetDynamicSearchAdsSearchTermViewRequest) (*resources.DynamicSearchAdsSearchTermView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDynamicSearchAdsSearchTermView not implemented")
}
func (UnimplementedDynamicSearchAdsSearchTermViewServiceServer) mustEmbedUnimplementedDynamicSearchAdsSearchTermViewServiceServer() {
}

// UnsafeDynamicSearchAdsSearchTermViewServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DynamicSearchAdsSearchTermViewServiceServer will
// result in compilation errors.
type UnsafeDynamicSearchAdsSearchTermViewServiceServer interface {
	mustEmbedUnimplementedDynamicSearchAdsSearchTermViewServiceServer()
}

func RegisterDynamicSearchAdsSearchTermViewServiceServer(s grpc.ServiceRegistrar, srv DynamicSearchAdsSearchTermViewServiceServer) {
	s.RegisterService(&DynamicSearchAdsSearchTermViewService_ServiceDesc, srv)
}

func _DynamicSearchAdsSearchTermViewService_GetDynamicSearchAdsSearchTermView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDynamicSearchAdsSearchTermViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicSearchAdsSearchTermViewServiceServer).GetDynamicSearchAdsSearchTermView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v7.services.DynamicSearchAdsSearchTermViewService/GetDynamicSearchAdsSearchTermView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicSearchAdsSearchTermViewServiceServer).GetDynamicSearchAdsSearchTermView(ctx, req.(*GetDynamicSearchAdsSearchTermViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DynamicSearchAdsSearchTermViewService_ServiceDesc is the grpc.ServiceDesc for DynamicSearchAdsSearchTermViewService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DynamicSearchAdsSearchTermViewService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v7.services.DynamicSearchAdsSearchTermViewService",
	HandlerType: (*DynamicSearchAdsSearchTermViewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDynamicSearchAdsSearchTermView",
			Handler:    _DynamicSearchAdsSearchTermViewService_GetDynamicSearchAdsSearchTermView_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v7/services/dynamic_search_ads_search_term_view_service.proto",
}
