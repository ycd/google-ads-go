// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package services

import (
	context "context"
	resources "github.com/ycd/google-ads-go/resources"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AccountLinkServiceClient is the client API for AccountLinkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AccountLinkServiceClient interface {
	// Returns the account link in full detail.
	//
	// List of thrown errors:
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [QuotaError]()
	//   [RequestError]()
	GetAccountLink(ctx context.Context, in *GetAccountLinkRequest, opts ...grpc.CallOption) (*resources.AccountLink, error)
	// Creates an account link.
	//
	// List of thrown errors:
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [DatabaseError]()
	//   [FieldError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [MutateError]()
	//   [QuotaError]()
	//   [RequestError]()
	//   [ThirdPartyAppAnalyticsLinkError]()
	CreateAccountLink(ctx context.Context, in *CreateAccountLinkRequest, opts ...grpc.CallOption) (*CreateAccountLinkResponse, error)
	// Creates or removes an account link.
	// From V5, create is not supported through
	// AccountLinkService.MutateAccountLink. Please use
	// AccountLinkService.CreateAccountLink instead.
	//
	// List of thrown errors:
	//   [AccountLinkError]()
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [FieldMaskError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [MutateError]()
	//   [QuotaError]()
	//   [RequestError]()
	MutateAccountLink(ctx context.Context, in *MutateAccountLinkRequest, opts ...grpc.CallOption) (*MutateAccountLinkResponse, error)
}

type accountLinkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountLinkServiceClient(cc grpc.ClientConnInterface) AccountLinkServiceClient {
	return &accountLinkServiceClient{cc}
}

func (c *accountLinkServiceClient) GetAccountLink(ctx context.Context, in *GetAccountLinkRequest, opts ...grpc.CallOption) (*resources.AccountLink, error) {
	out := new(resources.AccountLink)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v7.services.AccountLinkService/GetAccountLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountLinkServiceClient) CreateAccountLink(ctx context.Context, in *CreateAccountLinkRequest, opts ...grpc.CallOption) (*CreateAccountLinkResponse, error) {
	out := new(CreateAccountLinkResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v7.services.AccountLinkService/CreateAccountLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountLinkServiceClient) MutateAccountLink(ctx context.Context, in *MutateAccountLinkRequest, opts ...grpc.CallOption) (*MutateAccountLinkResponse, error) {
	out := new(MutateAccountLinkResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v7.services.AccountLinkService/MutateAccountLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountLinkServiceServer is the server API for AccountLinkService service.
// All implementations must embed UnimplementedAccountLinkServiceServer
// for forward compatibility
type AccountLinkServiceServer interface {
	// Returns the account link in full detail.
	//
	// List of thrown errors:
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [QuotaError]()
	//   [RequestError]()
	GetAccountLink(context.Context, *GetAccountLinkRequest) (*resources.AccountLink, error)
	// Creates an account link.
	//
	// List of thrown errors:
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [DatabaseError]()
	//   [FieldError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [MutateError]()
	//   [QuotaError]()
	//   [RequestError]()
	//   [ThirdPartyAppAnalyticsLinkError]()
	CreateAccountLink(context.Context, *CreateAccountLinkRequest) (*CreateAccountLinkResponse, error)
	// Creates or removes an account link.
	// From V5, create is not supported through
	// AccountLinkService.MutateAccountLink. Please use
	// AccountLinkService.CreateAccountLink instead.
	//
	// List of thrown errors:
	//   [AccountLinkError]()
	//   [AuthenticationError]()
	//   [AuthorizationError]()
	//   [FieldMaskError]()
	//   [HeaderError]()
	//   [InternalError]()
	//   [MutateError]()
	//   [QuotaError]()
	//   [RequestError]()
	MutateAccountLink(context.Context, *MutateAccountLinkRequest) (*MutateAccountLinkResponse, error)
	mustEmbedUnimplementedAccountLinkServiceServer()
}

// UnimplementedAccountLinkServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAccountLinkServiceServer struct {
}

func (UnimplementedAccountLinkServiceServer) GetAccountLink(context.Context, *GetAccountLinkRequest) (*resources.AccountLink, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountLink not implemented")
}
func (UnimplementedAccountLinkServiceServer) CreateAccountLink(context.Context, *CreateAccountLinkRequest) (*CreateAccountLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccountLink not implemented")
}
func (UnimplementedAccountLinkServiceServer) MutateAccountLink(context.Context, *MutateAccountLinkRequest) (*MutateAccountLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MutateAccountLink not implemented")
}
func (UnimplementedAccountLinkServiceServer) mustEmbedUnimplementedAccountLinkServiceServer() {}

// UnsafeAccountLinkServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AccountLinkServiceServer will
// result in compilation errors.
type UnsafeAccountLinkServiceServer interface {
	mustEmbedUnimplementedAccountLinkServiceServer()
}

func RegisterAccountLinkServiceServer(s grpc.ServiceRegistrar, srv AccountLinkServiceServer) {
	s.RegisterService(&AccountLinkService_ServiceDesc, srv)
}

func _AccountLinkService_GetAccountLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountLinkServiceServer).GetAccountLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v7.services.AccountLinkService/GetAccountLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountLinkServiceServer).GetAccountLink(ctx, req.(*GetAccountLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountLinkService_CreateAccountLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountLinkServiceServer).CreateAccountLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v7.services.AccountLinkService/CreateAccountLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountLinkServiceServer).CreateAccountLink(ctx, req.(*CreateAccountLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountLinkService_MutateAccountLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateAccountLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountLinkServiceServer).MutateAccountLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v7.services.AccountLinkService/MutateAccountLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountLinkServiceServer).MutateAccountLink(ctx, req.(*MutateAccountLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AccountLinkService_ServiceDesc is the grpc.ServiceDesc for AccountLinkService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AccountLinkService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v7.services.AccountLinkService",
	HandlerType: (*AccountLinkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccountLink",
			Handler:    _AccountLinkService_GetAccountLink_Handler,
		},
		{
			MethodName: "CreateAccountLink",
			Handler:    _AccountLinkService_CreateAccountLink_Handler,
		},
		{
			MethodName: "MutateAccountLink",
			Handler:    _AccountLinkService_MutateAccountLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v7/services/account_link_service.proto",
}
